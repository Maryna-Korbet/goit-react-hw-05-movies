{"version":3,"file":"static/js/655.26d42d81.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.js","pages/MoviesDetails.styled.js","pages/MoviesDetails.js","services/fetchDataApi.js"],"sourcesContent":["import { Grid } from 'react-loader-spinner';\n\nfunction Loader() {\n    return (\n        <Grid\n            display=\"flex\"\n            justifyContent=\"space-around\"\n            padding=\"50px\"\n            height=\"30\"\n            width=\"30\"\n            color=\"orangered\"\n            ariaLabel=\"grid-loading\"\n            radius=\"12.5\"\n        />\n    );\n};\n\nexport default Loader;","import styled from 'styled-components';\n\nexport const Container = styled.section`\n  display: flex;\n  gap: 30px;\n  padding: 15px 0;\n  border-bottom: 1px solid #727272;\n  \n  img {\n    width: 300px;\n    height: auto;\n    \n    border-radius: 15px;\n    box-shadow: 0px 8px 8px -1px rgb(0 0 0 / 20%),\n    0px 8px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  }\n\n  h1 {\n    margin-bottom: 10px;\n    font-size: 30px;\n  }\n\n  h2 {\n    margin-top: 15px;\n    font-size: 20px;\n    text-decoration: underline;\n  }\n`;\n\n\n","import { Container } from 'components/MovieInfo/MovieInfo.styled';\n\nconst MovieInfo = ({ movieInfo }) => {\n  const {\n    poster_path,\n    title,\n    release_date,\n    popularity,\n    status,\n    overview,\n    genres = [],\n  } = movieInfo;\n\n  const data = new Date(release_date).getFullYear();\n\n  return (\n    <Container>\n      \n      {poster_path ? (\n        <img\n          src={'https://image.tmdb.org/t/p/w500' + poster_path}\n          alt={title}\n        />\n      ) : (<div>No poster</div>)\n      }\n\n      <div>\n        <h1>\n        {title ? title : 'Title missing'} \n        </h1>\n        <p>\n          <b>Release date:</b> {data}\n        </p>\n        <p>\n          <b>User Scote: </b>\n          {Math.round(popularity)}%\n        </p>\n        <p>\n          <b>Status:</b> {status}\n        </p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        <ul>\n          {genres.map(({id, name}) => (\n            <li key={id}>{name}</li>\n          ))}\n        </ul>\n      </div>\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n\n","import styled from \"styled-components\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n    display: inline-flex;\n    -items: center;\n    text-decoration: none;\n    font-weight: 500;\n    text-transform: uppercase; \n    color: black;\n`;\n\nexport const 小ontainer = styled.div`\n    border-bottom: 1px solid #727272;\n    padding: 15px;\n    p {\n        padding-left: 15px;\n        font-size: 20px;\n        text-decoration: underline;\n        font-weight: bold;\n    }\n`;\n\nexport const OtherInfo = styled.ul`\n    text-decoration: none;\n    margin-top: 15px;\n    padding-left: 20px;\n`;\n\nexport const OtherInfoLink = styled(NavLink)`\n    display: block;\n    margin: auto;\n    text-decoration: none;\n    color: black;\n    list-style: none;\n    &.active {\n        color: #ff4388;\n    }\n    :hover:not(.active),\n    :focus-visible:not(.active) {\n        text-decoration: underline;\n    }\n`;\n\n","import { fetchMovieById } from 'services/fetchDataApi';\nimport { HiArrowLeft } from \"react-icons/hi\";\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport MovieInfo  from 'components/MovieInfo/MovieInfo';\nimport Loader from 'components/Loader/Loader';\nimport { StyledLink, 小ontainer, OtherInfo, OtherInfoLink } from 'pages/MoviesDetails.styled';\n\nconst ERROR_MESSAGE = 'No movie info.'; \n\nconst MoviesDetails = () => {\n  const [movieInfo, setMovieInfo] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const BackLinkHref = useRef(location.state?.from);\n  \n  useEffect(() => {\n\n    setError(null);\n    setIsLoading(true);\n\n    if (!movieId) {\n      return;\n    }\n\n    async function getSearchInfo() {\n      try{\n        const response = await fetchMovieById(movieId);\n        const info = response.data;\n\n        if (info.length === 0) {\n          return;\n        }\n\n        setMovieInfo(info);\n        setIsLoading(false);\n      } catch {\n        setError(ERROR_MESSAGE);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getSearchInfo(); \n  }, [movieId]);\n\n  return (\n    <div>\n      <StyledLink to={BackLinkHref.current ?? '/'}>\n        <HiArrowLeft size=\"24\" />\n        <p>Go back</p>\n      </StyledLink>\n\n      {error && <p style={{ color: 'red'}}>{ERROR_MESSAGE}</p>}\n      {isLoading && <Loader />}\n      {!isLoading && !error && <MovieInfo movieInfo={movieInfo} />}\n\n      <小ontainer>\n        <p>Additional information</p>\n        <OtherInfo>\n            <li>\n                <OtherInfoLink to={'cast'} state={{ from: location?.state?.from }}>\n                Cast\n                </OtherInfoLink>\n            </li>\n            <li>\n                <OtherInfoLink  to={'reviews'} state={{ from: location?.state?.from }}>\n                Reviews\n                </OtherInfoLink>\n            </li>\n        </OtherInfo>\n      </小ontainer>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n\n\n","import axios from 'axios';\n\nconst KEY = 'd1974eedcccfa08b3dec022ac0b9b390';\naxios.defaults.baseURL= 'https://api.themoviedb.org/3/';\n\nconst ERROR_MESSAGE = 'Error. Request failed.';\n\n// Request for Home\nexport async function fetchTrendingMovies() {\n    try {\n        const response = await axios.get(`trending/all/day?api_key=${KEY}`, {\n          params: {\n            api_key: KEY,\n          },\n        },\n        );\n        return response.data.results;\n      } catch {\n        console.log(ERROR_MESSAGE);\n      }\n}\n\n// Request for Movies\nexport async function fetchSearchMovies(search) {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: KEY,\n        query: search,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log(ERROR_MESSAGE);\n  }\n}\n\n// Request for MovieDetails\nexport async function fetchMovieById(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response;\n  } catch {\n    console.log(ERROR_MESSAGE);\n  }\n}\n\n// Request for Cast\nexport async function fetchMovieCast(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log(ERROR_MESSAGE);\n  }\n}\n\n// Request for Reviews\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log(ERROR_MESSAGE);\n  }\n}"],"names":["display","justifyContent","padding","height","width","color","ariaLabel","radius","Container","styled","movieInfo","poster_path","title","release_date","popularity","status","overview","genres","data","Date","getFullYear","src","alt","Math","round","map","id","name","StyledLink","Link","小ontainer","OtherInfo","OtherInfoLink","NavLink","ERROR_MESSAGE","useState","setMovieInfo","isLoading","setIsLoading","error","setError","movieId","useParams","location","useLocation","BackLinkHref","useRef","state","from","useEffect","fetchMovieById","response","info","length","getSearchInfo","to","current","size","style","Loader","KEY","axios","fetchTrendingMovies","params","api_key","results","console","log","fetchSearchMovies","search","query","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}