{"version":3,"file":"static/js/806.f9017e11.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","services/fetchDataApi.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import { Grid } from 'react-loader-spinner';\n\nfunction Loader() {\n    return (\n        <Grid\n            display=\"flex\"\n            justifyContent=\"space-around\"\n            padding=\"50px\"\n            height=\"30\"\n            width=\"30\"\n            color=\"orangered\"\n            ariaLabel=\"grid-loading\"\n            radius=\"12.5\"\n        />\n    );\n};\n\nexport default Loader;","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  padding: 20px 45px;\n  margin: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  p {\n    margin-bottom: 10px;\n  }\n`;","import { fetchMovieReviews } from 'services/fetchDataApi';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Loader  from 'components/Loader/Loader';\nimport { Container } from 'components/Reviews/Reviews.styled';\n\nconst ERROR_MESSAGE = 'Error information loading'; \n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsInfo, setReviewsInfo] = useState([]);\n  const [error, setError] = useState(null);\n  const [notFound, setNotFound] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    async function getSearchReviews() {\n      try {\n          const response = await fetchMovieReviews(movieId);\n          const reviewsInfo = response.data.results;\n          \n          if (reviewsInfo.length === 0) {\n              setNotFound(true);\n              return;\n          }\n          setReviewsInfo(reviewsInfo);\n      } catch {\n          setError(ERROR_MESSAGE);\n      } finally{\n        setIsLoading(false);\n      }\n  }\n  getSearchReviews();\n  }, [movieId]);\n  \n  return (\n    <div>\n      {error && <p style={{ color: 'red'}}>{ERROR_MESSAGE}</p>}\n      {notFound && <p style={{ color: 'orangered'}}>No information about actors</p>}\n      {reviewsInfo && isLoading && <Loader />}\n\n      {reviewsInfo && !notFound && !isLoading && (\n        <Container>\n        {reviewsInfo.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>\n                <b>Author: </b>\n                {author}\n              </p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </Container>\n      )}\n    </div>\n  );\n}\n\nexport default Reviews;\n\n","import axios from 'axios';\n\nconst KEY = 'd1974eedcccfa08b3dec022ac0b9b390';\naxios.defaults.baseURL= 'https://api.themoviedb.org/3/';\n\nconst ERROR_MESSAGE = 'Error. Request failed.';\n\n// Request for Home\nexport async function fetchTrendingMovies() {\n    try {\n        const response = await axios.get(`trending/all/day?api_key=${KEY}`, {\n          params: {\n            api_key: KEY,\n          },\n        },\n        );\n        return response.data.results;\n      } catch {\n        console.log(ERROR_MESSAGE);\n      }\n}\n\n// Request for Movies\nexport async function fetchSearchMovies(search) {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: KEY,\n        query: search,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log(ERROR_MESSAGE);\n  }\n}\n\n// Request for MovieDetails\nexport async function fetchMovieById(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response;\n  } catch {\n    console.log(ERROR_MESSAGE);\n  }\n}\n\n// Request for Cast\nexport async function fetchMovieCast(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log(ERROR_MESSAGE);\n  }\n}\n\n// Request for Reviews\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log(ERROR_MESSAGE);\n  }\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["display","justifyContent","padding","height","width","color","ariaLabel","radius","Container","styled","ERROR_MESSAGE","movieId","useParams","useState","reviewsInfo","setReviewsInfo","error","setError","notFound","setNotFound","isLoading","setIsLoading","useEffect","fetchMovieReviews","response","data","results","length","getSearchReviews","style","Loader","map","id","author","content","KEY","axios","fetchTrendingMovies","params","api_key","console","log","fetchSearchMovies","search","query","fetchMovieById","fetchMovieCast","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value"],"sourceRoot":""}